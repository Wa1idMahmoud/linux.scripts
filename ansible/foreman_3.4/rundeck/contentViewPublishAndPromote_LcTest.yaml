- defaultTab: nodes
  description: "Update all contentViews of LcTest   \nAnsible Playbook Template: https://github.com/joe-speedboat/linux.scripts/blob/master/ansible/foreman_contentViewPublishAndPromote.yml"
  executionEnabled: true
  group: Foreman
  id: 26a56c63-fb25-40dd-b37a-fcdf52ef5b4a
  loglevel: INFO
  name: contentViewPublishAndPromote > LcTest
  nodeFilterEditable: false
  notification:
    onfailure:
      email:
        attachLog: true
        attachLogInFile: true
        recipients: admin@domain.tld
    onsuccess:
      email:
        attachLog: true
        attachLogInFile: true
        recipients: admin@domain.tld
  notifyAvgDurationThreshold: null
  plugins:
    ExecutionLifecycle: null
  schedule:
    month: '*'
    time:
      hour: '08'
      minute: '08'
      seconds: '0'
    weekday:
      day: '1'
    year: '*'
  scheduleEnabled: true
  sequence:
    commands:
    - configuration:
        ansible-become: 'false'
        ansible-extra-vars: |-
          ---
          contentViewName: 'cv_rhel9'
          lifecycleEnvironmentName: 'LcTest'
        ansible-playbook-inline: "---\n# Copyright (c) Chris Ruettimann <chris@bitbull.ch>\n\
          # This software is licensed to you under the GNU General Public License.\n\
          # There is NO WARRANTY for this software, express or\n# implied, including\
          \ the implied warranties of MERCHANTABILITY or FITNESS\n# FOR A PARTICULAR\
          \ PURPOSE. You should have received a copy of GPLv2\n# along with this software;\
          \ if not, see\n# http://www.gnu.org/licenses/gpl.txt\n#\n# Foreman API DOC:\
          \ https://foreman.domain.tld/apidoc\n# \n- hosts: localhost\n  gather_facts:\
          \ no\n  #vars:\n  #  validate_certs: False\n  #  foremanUser: 'foreman_admin'\n\
          \  #  foremanPassword: 'xxxxxx'\n  #  foremanUrl: 'https://foreman.domain.tld'\n\
          \  #  contentViewName: 'cv_rhel9'\n  #  lifecycleEnvironmentName: 'LcTest'\n\
          \  tasks:\n    - name: Get the content view ID\n      uri:\n        url:\
          \ \"{{ foremanUrl }}/katello/api/content_views\"\n        method: GET\n\
          \        force_basic_auth: yes\n        url_username: \"{{ foremanUser }}\"\
          \n        url_password: \"{{ foremanPassword }}\"\n        return_content:\
          \ yes\n        body_format: json\n        status_code: 200\n        validate_certs:\
          \ \"{{ validate_certs }}\"\n      register: contentViewResult\n    - name:\
          \ define contentViewId\n      set_fact:\n        contentViewId: \"{{ item.id\
          \ }}\"\n      with_items: \"{{ contentViewResult.json.results }}\"\n   \
          \   when: item.name == contentViewName\n  \n    - name: Get the lifecycle\
          \ environment ID\n      uri:\n        url: \"{{ foremanUrl }}/katello/api/environments\"\
          \n        method: GET\n        return_content: yes\n        body_format:\
          \ json\n        status_code: 200\n        force_basic_auth: yes\n      \
          \  url_username: \"{{ foremanUser }}\"\n        url_password: \"{{ foremanPassword\
          \ }}\"\n        validate_certs: \"{{ validate_certs }}\"\n      register:\
          \ lifecycleEnvironmentResult\n    - name: define lifecycleEnvironmentId\n\
          \      set_fact:\n        lifecycleEnvironmentId: \"{{ item.id }}\"\n  \
          \    with_items: \"{{ lifecycleEnvironmentResult.json.results }}\"\n   \
          \   when: item.name == lifecycleEnvironmentName\n\n    - name: Publish a\
          \ new version of content view\n      uri:\n        url: \"{{ foremanUrl\
          \ }}/katello/api/content_views/{{ contentViewId }}/publish\"\n        method:\
          \ POST\n        force_basic_auth: yes\n        url_username: \"{{ foremanUser\
          \ }}\"\n        url_password: \"{{ foremanPassword }}\"\n        body_format:\
          \ json\n        status_code: 202\n        validate_certs: \"{{ validate_certs\
          \ }}\"\n      register: publishTask\n\n    - name: Poll until publish task\
          \ is complete\n      uri:\n        url: \"{{ foremanUrl }}/foreman_tasks/api/tasks/{{\
          \ publishTask.json.id }}\"\n        method: GET\n        force_basic_auth:\
          \ yes\n        url_username: \"{{ foremanUser }}\"\n        url_password:\
          \ \"{{ foremanPassword }}\"\n        return_content: yes\n        body_format:\
          \ json\n        validate_certs: \"{{ validate_certs }}\"\n      register:\
          \ taskResult\n      until: taskResult.json.state == 'stopped'\n      retries:\
          \ 30\n      delay: 10\n\n    - name: define contentViewVersionId\n     \
          \ set_fact:\n        contentViewVersionId: \"{{ publishTask.json.input.content_view_version_id\
          \ }}\"\n\n    - name: Promote a content view version to a lifecycle environment\n\
          \      uri:\n        url: \"{{ foremanUrl }}/katello/api/content_view_versions/{{\
          \ contentViewVersionId }}/promote\"\n        method: POST\n        body:\n\
          \          id: \"{{ contentViewVersionId }}\"\n          environment_ids:\
          \ \"{{ lifecycleEnvironmentId }}\"\n        body_format: json\n        status_code:\
          \ 202\n        force_basic_auth: yes\n        url_username: \"{{ foremanUser\
          \ }}\"\n        url_password: \"{{ foremanPassword }}\"\n        validate_certs:\
          \ \"{{ validate_certs }}\"\n      register: promoteTask\n\n    - name: Poll\
          \ until promote task is complete\n      uri:\n        url: \"{{ foremanUrl\
          \ }}/foreman_tasks/api/tasks/{{ promoteTask.json.id }}\"\n        method:\
          \ GET\n        return_content: yes\n        body_format: json\n        force_basic_auth:\
          \ yes\n        url_username: \"{{ foremanUser }}\"\n        url_password:\
          \ \"{{ foremanPassword }}\"\n        validate_certs: \"{{ validate_certs\
          \ }}\"\n      register: taskResult\n      until: taskResult.json.state ==\
          \ 'stopped'\n      retries: 30\n      delay: 10\n...\n"
        ansible-ssh-passphrase-option: option.password
        ansible-ssh-use-agent: 'false'
      description: contentViewPublishAndPromote > LcTest > cv_rhel9
      nodeStep: true
      type: com.batix.rundeck.plugins.AnsiblePlaybookInlineWorkflowNodeStep
    - configuration:
        ansible-become: 'false'
        ansible-extra-vars: |-
          ---
          contentViewName: 'cv_rocky9'
          lifecycleEnvironmentName: 'LcTest'
        ansible-playbook-inline: "---\n# Copyright (c) Chris Ruettimann <chris@bitbull.ch>\n\
          # This software is licensed to you under the GNU General Public License.\n\
          # There is NO WARRANTY for this software, express or\n# implied, including\
          \ the implied warranties of MERCHANTABILITY or FITNESS\n# FOR A PARTICULAR\
          \ PURPOSE. You should have received a copy of GPLv2\n# along with this software;\
          \ if not, see\n# http://www.gnu.org/licenses/gpl.txt\n#\n# Foreman API DOC:\
          \ https://foreman.domain.tld/apidoc\n# \n- hosts: localhost\n  gather_facts:\
          \ no\n  #vars:\n  #  validate_certs: False\n  #  foremanUser: 'foreman_admin'\n\
          \  #  foremanPassword: 'xxxxxx'\n  #  foremanUrl: 'https://foreman.domain.tld'\n\
          \  #  contentViewName: 'cv_rhel9'\n  #  lifecycleEnvironmentName: 'LcTest'\n\
          \  tasks:\n    - name: Get the content view ID\n      uri:\n        url:\
          \ \"{{ foremanUrl }}/katello/api/content_views\"\n        method: GET\n\
          \        force_basic_auth: yes\n        url_username: \"{{ foremanUser }}\"\
          \n        url_password: \"{{ foremanPassword }}\"\n        return_content:\
          \ yes\n        body_format: json\n        status_code: 200\n        validate_certs:\
          \ \"{{ validate_certs }}\"\n      register: contentViewResult\n    - name:\
          \ define contentViewId\n      set_fact:\n        contentViewId: \"{{ item.id\
          \ }}\"\n      with_items: \"{{ contentViewResult.json.results }}\"\n   \
          \   when: item.name == contentViewName\n  \n    - name: Get the lifecycle\
          \ environment ID\n      uri:\n        url: \"{{ foremanUrl }}/katello/api/environments\"\
          \n        method: GET\n        return_content: yes\n        body_format:\
          \ json\n        status_code: 200\n        force_basic_auth: yes\n      \
          \  url_username: \"{{ foremanUser }}\"\n        url_password: \"{{ foremanPassword\
          \ }}\"\n        validate_certs: \"{{ validate_certs }}\"\n      register:\
          \ lifecycleEnvironmentResult\n    - name: define lifecycleEnvironmentId\n\
          \      set_fact:\n        lifecycleEnvironmentId: \"{{ item.id }}\"\n  \
          \    with_items: \"{{ lifecycleEnvironmentResult.json.results }}\"\n   \
          \   when: item.name == lifecycleEnvironmentName\n\n    - name: Publish a\
          \ new version of content view\n      uri:\n        url: \"{{ foremanUrl\
          \ }}/katello/api/content_views/{{ contentViewId }}/publish\"\n        method:\
          \ POST\n        force_basic_auth: yes\n        url_username: \"{{ foremanUser\
          \ }}\"\n        url_password: \"{{ foremanPassword }}\"\n        body_format:\
          \ json\n        status_code: 202\n        validate_certs: \"{{ validate_certs\
          \ }}\"\n      register: publishTask\n\n    - name: Poll until publish task\
          \ is complete\n      uri:\n        url: \"{{ foremanUrl }}/foreman_tasks/api/tasks/{{\
          \ publishTask.json.id }}\"\n        method: GET\n        force_basic_auth:\
          \ yes\n        url_username: \"{{ foremanUser }}\"\n        url_password:\
          \ \"{{ foremanPassword }}\"\n        return_content: yes\n        body_format:\
          \ json\n        validate_certs: \"{{ validate_certs }}\"\n      register:\
          \ taskResult\n      until: taskResult.json.state == 'stopped'\n      retries:\
          \ 30\n      delay: 10\n\n    - name: define contentViewVersionId\n     \
          \ set_fact:\n        contentViewVersionId: \"{{ publishTask.json.input.content_view_version_id\
          \ }}\"\n\n    - name: Promote a content view version to a lifecycle environment\n\
          \      uri:\n        url: \"{{ foremanUrl }}/katello/api/content_view_versions/{{\
          \ contentViewVersionId }}/promote\"\n        method: POST\n        body:\n\
          \          id: \"{{ contentViewVersionId }}\"\n          environment_ids:\
          \ \"{{ lifecycleEnvironmentId }}\"\n        body_format: json\n        status_code:\
          \ 202\n        force_basic_auth: yes\n        url_username: \"{{ foremanUser\
          \ }}\"\n        url_password: \"{{ foremanPassword }}\"\n        validate_certs:\
          \ \"{{ validate_certs }}\"\n      register: promoteTask\n\n    - name: Poll\
          \ until promote task is complete\n      uri:\n        url: \"{{ foremanUrl\
          \ }}/foreman_tasks/api/tasks/{{ promoteTask.json.id }}\"\n        method:\
          \ GET\n        return_content: yes\n        body_format: json\n        force_basic_auth:\
          \ yes\n        url_username: \"{{ foremanUser }}\"\n        url_password:\
          \ \"{{ foremanPassword }}\"\n        validate_certs: \"{{ validate_certs\
          \ }}\"\n      register: taskResult\n      until: taskResult.json.state ==\
          \ 'stopped'\n      retries: 30\n      delay: 10\n...\n"
        ansible-ssh-passphrase-option: option.password
        ansible-ssh-use-agent: 'false'
      description: contentViewPublishAndPromote > LcTest > cv_rocky9
      nodeStep: true
      type: com.batix.rundeck.plugins.AnsiblePlaybookInlineWorkflowNodeStep
    keepgoing: false
    strategy: node-first
  timeZone: Europe/Zurich
  timeout: 2h
  uuid: 26a56c63-fb25-40dd-b37a-fcdf52ef5b4a
