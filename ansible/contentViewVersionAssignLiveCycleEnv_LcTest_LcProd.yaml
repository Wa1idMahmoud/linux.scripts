- defaultTab: nodes
  description: "Update all contentViews of LcProd with content of LcTest   \nAnsible\
    \ Playbook Template: https://github.com/joe-speedboat/linux.scripts/blob/master/ansible/foreman_contentViewVersionAssignLiveCycleEnv.yml"
  executionEnabled: true
  group: Foreman
  id: eea07fca-c39d-476c-985e-e98738b54439
  loglevel: INFO
  name: contentViewVersionAssignLiveCycleEnv > LcTest >  LcProd
  nodeFilterEditable: false
  notification:
    onfailure:
      email:
        attachLog: true
        attachLogInFile: true
        recipients: admin@domain.tld
    onsuccess:
      email:
        attachLog: true
        attachLogInFile: true
        recipients: admin@domain.tld
  notifyAvgDurationThreshold: null
  plugins:
    ExecutionLifecycle: null
  schedule:
    month: '*'
    time:
      hour: '09'
      minute: '09'
      seconds: '0'
    weekday:
      day: '6'
    year: '*'
  scheduleEnabled: true
  sequence:
    commands:
    - configuration:
        ansible-become: 'false'
        ansible-extra-vars: |-
          ---
          contentViewName: 'cv_rhel9'
          #contentViewVersion: '3.0'
          contentViewVersion: 'latest'
          lifecycleEnvironmentName: 'LcProd'
          foremanCvPromoteForce: True
        ansible-playbook-inline: |
          ---
          # Copyright (c) Chris Ruettimann <chris@bitbull.ch>
          # This software is licensed to you under the GNU General Public License.
          # There is NO WARRANTY for this software, express or
          # implied, including the implied warranties of MERCHANTABILITY or FITNESS
          # FOR A PARTICULAR PURPOSE. You should have received a copy of GPLv2
          # along with this software; if not, see
          # http://www.gnu.org/licenses/gpl.txt
          #
          # Foreman API DOC: https://foreman.domain.tld/apidoc
          #
          - hosts: localhost
            gather_facts: no
            #vars:
            #  foremanCvPromoteForce: True
            #  validate_certs: False
            #  foremanUser: 'foreman_admin'
            #  foremanPassword: 'xxxxxx'
            #  foremanUrl: 'https://foreman.domain.tld'
            #  contentViewName: 'cv_rhel9'
            #  #contentViewVersion: '3.0'
            #  contentViewVersion: 'latest'
            #  lifecycleEnvironmentName: 'LcTest'
            tasks:
              - name: Get the content view ID
                uri:
                  url: "{{ foremanUrl }}/katello/api/content_views"
                  method: GET
                  return_content: yes
                  body_format: json
                  status_code: 200
                  force_basic_auth: yes
                  url_username: "{{ foremanUser }}"
                  url_password: "{{ foremanPassword }}"
                  validate_certs: "{{ validate_certs }}"
                register: contentViewResult
              - set_fact:
                  contentViewId: "{{ item.id }}"
                with_items: "{{ contentViewResult.json.results }}"
                when: item.name == contentViewName

              - name: Get the specific content view version IDs
                uri:
                  url: "{{ foremanUrl }}/katello/api/content_views/{{ contentViewId }}/content_view_versions"
                  method: GET
                  return_content: yes
                  body_format: json
                  status_code: 200
                  force_basic_auth: yes
                  url_username: "{{ foremanUser }}"
                  url_password: "{{ foremanPassword }}"
                  validate_certs: "{{ validate_certs }}"
                register: contentViewVersionsResult

              - name: find specivic content view version ID
                set_fact:
                  contentViewVersionId: "{{ item.id }}"
                with_items: "{{ contentViewVersionsResult.json.results }}"
                when: item.version == contentViewVersion and not contentViewVersion == 'latest'

              - name: find latest content view version ID
                set_fact:
                  contentViewVersionId: "{{ contentViewVersionsResult.json.results[0].id }}"
                when: contentViewVersion == 'latest'

              - name: Get the lifecycle environment ID
                uri:
                  url: "{{ foremanUrl }}/katello/api/environments"
                  method: GET
                  return_content: yes
                  body_format: json
                  status_code: 200
                  force_basic_auth: yes
                  url_username: "{{ foremanUser }}"
                  url_password: "{{ foremanPassword }}"
                  validate_certs: "{{ validate_certs }}"
                register: lifecycleEnvironmentResult

              - name: define lifecycleEnvironmentId
                set_fact:
                  lifecycleEnvironmentId: "{{ item.id }}"
                with_items: "{{ lifecycleEnvironmentResult.json.results }}"
                when: item.name == lifecycleEnvironmentName

              - name: Promote a content view version to a lifecycle environment
                uri:
                  url: "{{ foremanUrl }}/katello/api/content_view_versions/{{ contentViewVersionId }}/promote"
                  method: POST
                  body:
                    id: "{{ contentViewVersionId }}"
                    environment_ids: "{{ lifecycleEnvironmentId }}"
                    force: "{{ foremanCvPromoteForce }}"
                  body_format: json
                  status_code: 202
                  force_basic_auth: yes
                  url_username: "{{ foremanUser }}"
                  url_password: "{{ foremanPassword }}"
                  validate_certs: "{{ validate_certs }}"
                register: promoteTask

              - name: Poll until promote task is complete
                uri:
                  url: "{{ foremanUrl }}/foreman_tasks/api/tasks/{{ promoteTask.json.id }}"
                  method: GET
                  return_content: yes
                  body_format: json
                  force_basic_auth: yes
                  url_username: "{{ foremanUser }}"
                  url_password: "{{ foremanPassword }}"
                  validate_certs: "{{ validate_certs }}"
                register: taskResult
                until: taskResult.json.state == 'stopped'
                retries: 30
                delay: 10
          ...
        ansible-ssh-passphrase-option: option.password
        ansible-ssh-use-agent: 'false'
      description: contentViewVersionAssignLiveCycleEnv > LcTest >  LcProd (cv_rhel9)
      nodeStep: true
      type: com.batix.rundeck.plugins.AnsiblePlaybookInlineWorkflowNodeStep
    - configuration:
        ansible-become: 'false'
        ansible-extra-vars: |-
          ---
          contentViewName: 'cv_rocky9'
          #contentViewVersion: '3.0'
          contentViewVersion: 'latest'
          lifecycleEnvironmentName: 'LcProd'
          foremanCvPromoteForce: True
        ansible-playbook-inline: |
          ---
          # Copyright (c) Chris Ruettimann <chris@bitbull.ch>
          # This software is licensed to you under the GNU General Public License.
          # There is NO WARRANTY for this software, express or
          # implied, including the implied warranties of MERCHANTABILITY or FITNESS
          # FOR A PARTICULAR PURPOSE. You should have received a copy of GPLv2
          # along with this software; if not, see
          # http://www.gnu.org/licenses/gpl.txt
          #
          # Foreman API DOC: https://foreman.domain.tld/apidoc
          #
          - hosts: localhost
            gather_facts: no
            #vars:
            #  foremanCvPromoteForce: True
            #  validate_certs: False
            #  foremanUser: 'foreman_admin'
            #  foremanPassword: 'xxxxxx'
            #  foremanUrl: 'https://foreman.domain.tld'
            #  contentViewName: 'cv_rhel9'
            #  #contentViewVersion: '3.0'
            #  contentViewVersion: 'latest'
            #  lifecycleEnvironmentName: 'LcTest'
            tasks:
              - name: Get the content view ID
                uri:
                  url: "{{ foremanUrl }}/katello/api/content_views"
                  method: GET
                  return_content: yes
                  body_format: json
                  status_code: 200
                  force_basic_auth: yes
                  url_username: "{{ foremanUser }}"
                  url_password: "{{ foremanPassword }}"
                  validate_certs: "{{ validate_certs }}"
                register: contentViewResult
              - set_fact:
                  contentViewId: "{{ item.id }}"
                with_items: "{{ contentViewResult.json.results }}"
                when: item.name == contentViewName

              - name: Get the specific content view version IDs
                uri:
                  url: "{{ foremanUrl }}/katello/api/content_views/{{ contentViewId }}/content_view_versions"
                  method: GET
                  return_content: yes
                  body_format: json
                  status_code: 200
                  force_basic_auth: yes
                  url_username: "{{ foremanUser }}"
                  url_password: "{{ foremanPassword }}"
                  validate_certs: "{{ validate_certs }}"
                register: contentViewVersionsResult

              - name: find specivic content view version ID
                set_fact:
                  contentViewVersionId: "{{ item.id }}"
                with_items: "{{ contentViewVersionsResult.json.results }}"
                when: item.version == contentViewVersion and not contentViewVersion == 'latest'

              - name: find latest content view version ID
                set_fact:
                  contentViewVersionId: "{{ contentViewVersionsResult.json.results[0].id }}"
                when: contentViewVersion == 'latest'

              - name: Get the lifecycle environment ID
                uri:
                  url: "{{ foremanUrl }}/katello/api/environments"
                  method: GET
                  return_content: yes
                  body_format: json
                  status_code: 200
                  force_basic_auth: yes
                  url_username: "{{ foremanUser }}"
                  url_password: "{{ foremanPassword }}"
                  validate_certs: "{{ validate_certs }}"
                register: lifecycleEnvironmentResult

              - name: define lifecycleEnvironmentId
                set_fact:
                  lifecycleEnvironmentId: "{{ item.id }}"
                with_items: "{{ lifecycleEnvironmentResult.json.results }}"
                when: item.name == lifecycleEnvironmentName

              - name: Promote a content view version to a lifecycle environment
                uri:
                  url: "{{ foremanUrl }}/katello/api/content_view_versions/{{ contentViewVersionId }}/promote"
                  method: POST
                  body:
                    id: "{{ contentViewVersionId }}"
                    environment_ids: "{{ lifecycleEnvironmentId }}"
                    force: "{{ foremanCvPromoteForce }}"
                  body_format: json
                  status_code: 202
                  force_basic_auth: yes
                  url_username: "{{ foremanUser }}"
                  url_password: "{{ foremanPassword }}"
                  validate_certs: "{{ validate_certs }}"
                register: promoteTask

              - name: Poll until promote task is complete
                uri:
                  url: "{{ foremanUrl }}/foreman_tasks/api/tasks/{{ promoteTask.json.id }}"
                  method: GET
                  return_content: yes
                  body_format: json
                  force_basic_auth: yes
                  url_username: "{{ foremanUser }}"
                  url_password: "{{ foremanPassword }}"
                  validate_certs: "{{ validate_certs }}"
                register: taskResult
                until: taskResult.json.state == 'stopped'
                retries: 30
                delay: 10
          ...
        ansible-ssh-passphrase-option: option.password
        ansible-ssh-use-agent: 'false'
      description: contentViewVersionAssignLiveCycleEnv > LcTest >  LcProd (cv_rocky9)
      nodeStep: true
      type: com.batix.rundeck.plugins.AnsiblePlaybookInlineWorkflowNodeStep
    keepgoing: false
    strategy: node-first
  timeZone: Europe/Zurich
  timeout: 2h
  uuid: eea07fca-c39d-476c-985e-e98738b54439
